# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    public_directory: '%kernel.project_dir%/public'
    uploads_directory: '%public_directory%/uploads'

services:
    # default configuration for services in *this* file
    _defaults:
        bind:               # makes $publicPath available to all services
            $publicPath: '%public_directory%'
            $appEmail: 'thijsdw1@gmail.com'
            $apiPrivate: '%env(MOLLIE_PRIVATE_KEY)%'
            $apiPublic: '%env(MOLLIE_PUBLIC_KEY)%'
            $reactHomeDirectory: 'https://www.hop-stop.nl'
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.


    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'
            - '../src/Tests/'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller/'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    App\Serializer\AdminGroupsContextBuilder:
        decorates: 'api_platform.serializer.context_builder'
        arguments: [ '@App\Serializer\AdminGroupsContextBuilder.inner' ]

    App\ApiPlatform\AutoGroupResourceMetadataFactory:
        decorates: 'api_platform.metadata.resource.metadata_factory'
        arguments: ['@App\ApiPlatform\AutoGroupResourceMetadataFactory.inner']
        decoration_priority: -20

    App\Doctrine\CartSetOwnerListener:
        tags: ['doctrine.orm.entity_listener']

    App\Service\FileUploader:
        arguments:
            $uploadPath: '%uploads_directory%'

    App\EventListener\AuthenticationSuccessListener:
        tags:
            - { name: kernel.event_listener, event: lexik_jwt_authentication.on_authentication_success, method: onAuthenticationSuccessResponse }